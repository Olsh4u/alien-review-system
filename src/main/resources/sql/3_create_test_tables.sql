CREATE TABLE users
(
    id            INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    login         VARCHAR(50)        NOT NULL UNIQUE,
    password      CHARACTER(30)      NOT NULL,
    avatar        VARCHAR(100),

    /*
     0 - AccessRights.ADMIN
     1 - AccessRights.USER
     */
    access_rights SMALLINT DEFAULT 1 NOT NULL CHECK ( access_rights IN (0, 1))
);

CREATE TABLE abilities
(
    id    INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE planets
(
    id    INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE sources
(
    id    INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE aliens
(
    id               INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name             VARCHAR(50)   NOT NULL UNIQUE,
    description      VARCHAR(1000) NOT NULL,
    logo             VARCHAR(100),
    full_size_logo   VARCHAR(100),
    first_appearance INTEGER NOT NULL ,
    likes_count      INTEGER DEFAULT 0,
    planet_id        INTEGER       NOT NULL,
    ability_id        INTEGER       NOT NULL,
    CONSTRAINT fk_alien_planet FOREIGN KEY (planet_id)
        REFERENCES planets (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT fk_alien_ability FOREIGN KEY (ability_id)
        REFERENCES abilities (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE UNIQUE INDEX likes_count_idx ON aliens (likes_count);

CREATE TABLE comments
(
    id               INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id          INTEGER      NOT NULL,
    alien_id         INTEGER      NOT NULL,
    comment          VARCHAR(500) NOT NULL,
    publication_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_comment_user FOREIGN KEY (user_id)
        REFERENCES users (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT fk_comment_alien FOREIGN KEY (alien_id)
        REFERENCES aliens (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE UNIQUE INDEX publication_date_idx ON comments (publication_date);

CREATE TABLE viewed
(
    user_id  INTEGER NOT NULL,
    alien_id INTEGER NOT NULL,
    UNIQUE (user_id, alien_id),
    CONSTRAINT fk_viewed_user FOREIGN KEY (user_id)
        REFERENCES users (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT fk_viewed_alien FOREIGN KEY (alien_id)
        REFERENCES aliens (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE TABLE liked
(
    user_id  INTEGER NOT NULL,
    alien_id INTEGER NOT NULL,
    UNIQUE (user_id, alien_id),
    CONSTRAINT fk_viewed_user FOREIGN KEY (user_id)
        REFERENCES users (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT fk_viewed_alien FOREIGN KEY (alien_id)
        REFERENCES aliens (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE TABLE alien_sources
(
    alien_id  INTEGER NOT NULL,
    source_id INTEGER NOT NULL,
    UNIQUE (alien_id, source_id),
    CONSTRAINT fk_alien_source_alien FOREIGN KEY (alien_id)
        REFERENCES aliens (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT fk_alien_source_source FOREIGN KEY (source_id)
        REFERENCES sources (id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);